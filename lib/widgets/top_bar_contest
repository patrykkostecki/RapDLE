import 'package:flutter/material.dart';

class TopBarContents extends StatefulWidget {
  final double opacity;
  final Function onLogoClicked;

  TopBarContents(this.opacity, {required this.onLogoClicked});

  @override
  _TopBarContentsState createState() => _TopBarContentsState();
}

class _TopBarContentsState extends State<TopBarContents> with SingleTickerProviderStateMixin {
  final List<bool> _isHovering = List.filled(8, false);
  late AnimationController _animationController;
  late Animation<double> _animation;

  @override
  void initState() {
    super.initState();
    _animationController = AnimationController(vsync: this, duration: Duration(milliseconds: 200));
    _animation = Tween<double>(begin: 1.0, end: 1.2).animate(_animationController);
  }

  @override
  void dispose() {
    _animationController.dispose();
    super.dispose();
  }

  void _handleHover(bool hovering) {
    setState(() {
      _isHovering[0] = hovering;
    });
    if (_isHovering[0]) {
      _animationController.forward();
    } else {
      _animationController.reverse();
    }
  }

  @override
  Widget build(BuildContext context) {
    var screenSize = MediaQuery.of(context).size;

    return PreferredSize(
      preferredSize: Size(screenSize.width, 70),
      child: Container(
        color: Colors.white.withOpacity(widget.opacity),
        child: Padding(
          padding: EdgeInsets.all(20),
          child: Row(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              Expanded(
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: [
                    SizedBox(width: screenSize.width / 10),
                    MouseRegion(
                      onEnter: (_) => _handleHover(true),
                      onExit: (_) => _handleHover(false),
                      child: GestureDetector(
                        onTap: () => widget.onLogoClicked(),
                        child: ScaleTransition(
                          scale: _animation,
                          child: Text(
                            'RAPdle',
                            style: TextStyle(
                              color: Color(0xFF424C55),
                              fontSize: 28,
                              fontFamily: 'MiniBananaDemoRegular',
                              fontWeight: FontWeight.w900,
                              letterSpacing: 3,
                            ),
                          ),
                        ),
                      ),
                    ),

                    SizedBox(width: screenSize.width / 15),
                    InkWell(
                      onHover: (value) {
                        setState(() {
                          value
                              ? _isHovering[1] = true
                              : _isHovering[1] = false;
                        });
                      },
                      onTap: () {},
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            'POPdle',
                            style: TextStyle(
                                color: _isHovering[1]
                                    ? Color(0xFF424C55)
                                    : Color(0xFF424C55),
                                fontWeight: FontWeight.bold,
                                fontSize: 15,
                                fontFamily: 'MiniBananaDemoRegular',
                            ),
                          ),
                          SizedBox(height: 5),
                          Visibility(
                            maintainAnimation: true,
                            maintainState: true,
                            maintainSize: true,
                            visible: _isHovering[1],
                            child: Container(
                              height: 2,
                              width: 20,
                              color: Color(0xFF424C55),
                            ),
                          )
                        ],
                      ),
                    ),
                    SizedBox(width: screenSize.width / 15),
                    InkWell(
                      onHover: (value) {
                        setState(() {
                          value
                              ? _isHovering[2] = true
                              : _isHovering[2] = false;
                        });
                      },
                      onTap: () {},
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            'ROCKdle',
                            style: TextStyle(
                                color: _isHovering[2]
                                    ? Color(0xFF424C55)
                                    : Color(0xFF424C55),
                                fontWeight: FontWeight.bold,
                                fontSize: 15,
                                fontFamily: 'MiniBananaDemoRegular',
                            ),
                          ),
                          SizedBox(height: 5),
                          Visibility(
                            maintainAnimation: true,
                            maintainState: true,
                            maintainSize: true,
                            visible: _isHovering[2],
                            child: Container(
                              height: 2,
                              width: 20,
                              color: Color(0xFF424C55),
                            ),
                          )
                        ],
                      ),
                    ),
                    SizedBox(width: screenSize.width / 15),


                  ],
                ),
              ),

            ],
          ),
        ),
      ),
    );
  }
}