import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:rapdle/authorization/login_screen.dart';
import 'package:rapdle/authorization/register_screen.dart';

class TopBarContents extends StatefulWidget {
  final double opacity;
  final Function onLogoClicked;

  TopBarContents(this.opacity, {required this.onLogoClicked});

  @override
  _TopBarContentsState createState() => _TopBarContentsState();
}

class _TopBarContentsState extends State<TopBarContents> {
  User? _user;
  String? _userName;

  @override
  void initState() {
    super.initState();
    _user = FirebaseAuth.instance.currentUser;
    _fetchUserName(); // Pobierz nazwę użytkownika, jeśli jest zalogowany
  }

  Future<void> _fetchUserName() async {
    if (_user != null) {
      DocumentSnapshot userDoc = await FirebaseFirestore.instance
          .collection('users')
          .doc(_user!.uid)
          .get();
      setState(() {
        _userName = userDoc['username'] ?? 'Użytkownik';
      });
    }
  }

  void _showLoginDialog() {
    showDialog(
      context: context,
      builder: (context) {
        return Dialog(
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
          child: LoginScreen(onLogin: () {
            Navigator.of(context).pop();
            _user = FirebaseAuth.instance.currentUser;
            _fetchUserName(); // Aktualizuj po zalogowaniu
          }),
        );
      },
    );
  }

  void _showRegisterDialog() {
    showDialog(
      context: context,
      builder: (context) {
        return Dialog(
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
          child: RegisterScreen(onRegister: () {
            Navigator.of(context).pop();
            _user = FirebaseAuth.instance.currentUser;
            _fetchUserName(); // Aktualizuj po rejestracji
          }),
        );
      },
    );
  }

  void _logout() async {
    await FirebaseAuth.instance.signOut();
    setState(() {
      _user = null;
      _userName = null;
    });
  }

  @override
  Widget build(BuildContext context) {
    var screenSize = MediaQuery.of(context).size;
    bool isMobile = screenSize.width < 600; // Zmiany tylko dla ekranów poniżej 600px

    return PreferredSize(
      preferredSize: Size(screenSize.width, 70),
      child: Container(
        color: Colors.white.withOpacity(widget.opacity),
        child: Padding(
          padding: EdgeInsets.only(
              right: 15,
              left: isMobile ? 20 : 40), // Padding od lewej tylko dla dużych ekranów
          child: Row(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              Expanded(
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: [
                    GestureDetector(
                      onTap: () => widget.onLogoClicked(),
                      child: Text(
                        'RAPdle',
                        style: TextStyle(
                          color: Color(0xFF424C55),
                          fontSize: isMobile ? 20 : 28, // Zmiany tylko na mobile
                          fontFamily: 'MiniBananaDemoRegular',
                          fontWeight: FontWeight.w900,
                          letterSpacing: 3,
                        ),
                      ),
                    ),
                    SizedBox(width: screenSize.width / 15),
                    _buildMenuItem('POPdle'),
                    SizedBox(width: screenSize.width / 15),
                    _buildMenuItem('ROCKdle'),
                  ],
                ),
              ),

              // Jeśli użytkownik jest zalogowany, pokaż nazwę użytkownika
              if (_user != null)
                isMobile
                    ? Column(
                        // Dla mobilnych ekranów nazwa pod przyciskiem
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          PopupMenuButton<String>(
                            icon: CircleAvatar(
                              backgroundColor: Colors.grey[300],
                              radius: 12, // Zmiany tylko na mobile
                              child: Icon(
                                Icons.person,
                                color: Colors.black,
                                size: 16, // Zmiany tylko na mobile
                              ),
                            ),
                            onSelected: (value) {
                              if (value == 'login') {
                                _showLoginDialog();
                              } else if (value == 'register') {
                                _showRegisterDialog();
                              } else if (value == 'logout') {
                                _logout();
                              } else if (value == 'stats') {
                                // Placeholder dla statystyk
                              }
                            },
                            itemBuilder: (context) {
                              if (_user == null) {
                                return [
                                  PopupMenuItem(
                                    value: 'login',
                                    child: Text('Zaloguj się'),
                                  ),
                                  PopupMenuItem(
                                    value: 'register',
                                    child: Text('Zarejestruj się'),
                                  ),
                                ];
                              } else {
                                return [
                                  PopupMenuItem(
                                    value: 'stats',
                                    child: Text('Statystyki'),
                                  ),
                                  PopupMenuItem(
                                    value: 'logout',
                                    child: Text('Wyloguj'),
                                  ),
                                ];
                              }
                            },
                          ),
                          Padding(
                            padding: const EdgeInsets.only(top: 8),
                            child: Text(
                              _userName ?? 'Użytkownik',
                              style: TextStyle(
                                fontWeight: FontWeight.bold,
                                fontSize: 12, // Zmiany tylko na mobile
                                color: Colors.black,
                              ),
                            ),
                          ),
                        ],
                      )
                    : Row(
                        // Dla dużych ekranów (desktop) wszystko pozostaje jak wcześniej
                        children: [
                          Padding(
                            padding: const EdgeInsets.only(right: 10),
                            child: Text(
                              _userName ?? 'Użytkownik',
                              style: TextStyle(
                                fontWeight: FontWeight.bold,
                                fontSize: 16,
                                color: Colors.black,
                              ),
                            ),
                          ),
                          PopupMenuButton<String>(
                            icon: CircleAvatar(
                              backgroundColor: Colors.grey[300],
                              child: Icon(
                                Icons.person,
                                color: Colors.black,
                              ),
                            ),
                            onSelected: (value) {
                              if (value == 'login') {
                                _showLoginDialog();
                              } else if (value == 'register') {
                                _showRegisterDialog();
                              } else if (value == 'logout') {
                                _logout();
                              } else if (value == 'stats') {
                                // Placeholder dla statystyk
                              }
                            },
                            itemBuilder: (context) {
                              if (_user == null) {
                                return [
                                  PopupMenuItem(
                                    value: 'login',
                                    child: Text('Zaloguj się'),
                                  ),
                                  PopupMenuItem(
                                    value: 'register',
                                    child: Text('Zarejestruj się'),
                                  ),
                                ];
                              } else {
                                return [
                                  PopupMenuItem(
                                    value: 'stats',
                                    child: Text('Statystyki'),
                                  ),
                                  PopupMenuItem(
                                    value: 'logout',
                                    child: Text('Wyloguj'),
                                  ),
                                ];
                              }
                            },
                          ),
                        ],
                      ),

              if (_user == null) // Gdy użytkownik nie jest zalogowany
                PopupMenuButton<String>(
                  icon: CircleAvatar(
                    backgroundColor: Colors.grey[300],
                    child: Icon(
                      Icons.person,
                      color: Colors.black,
                    ),
                  ),
                  onSelected: (value) {
                    if (value == 'login') {
                      _showLoginDialog();
                    } else if (value == 'register') {
                      _showRegisterDialog();
                    }
                  },
                  itemBuilder: (context) => [
                    PopupMenuItem(
                      value: 'login',
                      child: Text('Zaloguj się'),
                    ),
                    PopupMenuItem(
                      value: 'register',
                      child: Text('Zarejestruj się'),
                    ),
                  ],
                ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildMenuItem(String title) {
    return InkWell(
      onTap: () {
        // Dodaj logikę po kliknięciu elementu menu
      },
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          Text(
            title,
            style: TextStyle(
              color: Color(0xFF424C55),
              fontWeight: FontWeight.bold,
              fontSize: 15,
              fontFamily: 'MiniBananaDemoRegular',
            ),
          ),
          SizedBox(height: 5),
          Container(
            height: 2,
            width: 20,
            color: Color(0xFF424C55),
          ),
        ],
      ),
    );
  }
}
